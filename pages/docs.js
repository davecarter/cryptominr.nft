import { Header } from "components/Header"
import styles from "../styles/Docs.module.css"
import { Footer } from "components/Footer"
import { TopBar } from "components/TopBar"

export default function Docs() {
  return (
    <div className={styles.container}>
      <Header />
      <main className={styles.main}>
        <TopBar />
        <div className={styles.content}>
          <h1 className={styles.title} >Getting started width the Blockchain builder tool</h1>
          <h2>Create you initial block</h2>
          <p>
            To create a new block, add a title, enter some block data and you'll see how the <em>current hash</em> value changes entirely on every new data input. This is because the hash function is a one-way function that generates a fixed-size string of bytes from the input data. The hash function is deterministic, meaning that the same input will always produce the same output.
          </p>
          <h2>Adding block data</h2>
          <p>
            The block data is the information that you want to store in the block. It can be any data you want, such as a transaction, a message, a file, or any other information. For simplicity, in this example only text can be added. The data is stored in the block as a string of bytes.<br /><strong>The block data is hashed together with the title, the date, the nonce and the previous block's hash to create the current block's hash.</strong>
          </p>
          <h2>Chaining blocks with the nonce</h2>
          <p>
            The nonce is a random number generated by the blockchain builder tool incremented by one on every new block creation indefinitely until the difficulty criteria are met. It is used to create a new hash value for the block. On every nonce iteration, the algorithm seeks a resulting hash having several starting ceroes (0s) defined by the difficulty value. The bigger the number of ceroes at the beginning, the longer it will take to find the valid hash. This process is known as mining.           </p>
        </div>
      </main>
      <Footer />
    </div>
  )
}
